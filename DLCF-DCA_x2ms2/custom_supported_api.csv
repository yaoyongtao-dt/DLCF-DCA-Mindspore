File,Start Line,End Line,Api,Type,Tips
pyabsa\core\apc\classic\__bert__\dataset_utils\data_utils_for_inferring.py,74,74,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\apc\classic\__bert__\dataset_utils\data_utils_for_training.py,164,164,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\apc\classic\__glove__\dataset_utils\data_utils_for_inferring.py,59,59,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\apc\classic\__glove__\dataset_utils\data_utils_for_training.py,150,150,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\apc\dataset_utils\data_utils_for_inferring.py,19,19,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\apc\dataset_utils\data_utils_for_training.py,16,16,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\apc\models\lca_bert.py,32,32,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\apc\models\lca_bert.py,33,33,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\apc\models\ssw_s.py,39,39,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\apc\models\ssw_t.py,50,50,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\apc\prediction\sentiment_classifier.py,82,82,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\apc\prediction\sentiment_classifier.py,85,85,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\apc\prediction\sentiment_classifier.py,163,163,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\apc\prediction\sentiment_classifier.py,176,176,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,47,47,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,61,61,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,93,93,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,124,124,torch.save,CUSTOM_SUPPORTED,"The corresponding api of ""torch.save"" is ""mindspore.save_checkpoint"", will be converted to ""x2ms_adapter.save"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,138,138,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,144,144,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,152,152,torch.utils.data.random_split,CUSTOM_SUPPORTED,"""torch.utils.data.random_split"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.random_split"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,159,159,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,161,161,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,398,398,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\apc\training\apc_trainer.py,479,479,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\bert_base_atepc.py,94,94,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\bert_base_atepc.py,95,95,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\fast_lcfs_atepc.py,109,109,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\fast_lcfs_atepc.py,110,110,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\fast_lcf_atepc.py,109,109,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\fast_lcf_atepc.py,110,110,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\lcfs_atepc.py,119,119,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\lcfs_atepc.py,120,120,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\lcfs_atepc_large.py,122,122,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\lcfs_atepc_large.py,123,123,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\lcf_atepc.py,119,119,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\lcf_atepc.py,120,120,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\lcf_atepc_large.py,122,122,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\models\lcf_atepc_large.py,123,123,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\atepc\prediction\aspect_extractor.py,73,73,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\atepc\prediction\aspect_extractor.py,75,75,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\atepc\prediction\aspect_extractor.py,248,248,torch.utils.data.TensorDataset,CUSTOM_SUPPORTED,"""torch.utils.data.TensorDataset"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.TensorDataset"" by x2mindspore."
pyabsa\core\atepc\prediction\aspect_extractor.py,252,252,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\atepc\prediction\aspect_extractor.py,331,331,torch.utils.data.TensorDataset,CUSTOM_SUPPORTED,"""torch.utils.data.TensorDataset"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.TensorDataset"" by x2mindspore."
pyabsa\core\atepc\prediction\aspect_extractor.py,336,336,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\atepc\training\atepc_trainer.py,80,80,torch.utils.data.TensorDataset,CUSTOM_SUPPORTED,"""torch.utils.data.TensorDataset"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.TensorDataset"" by x2mindspore."
pyabsa\core\atepc\training\atepc_trainer.py,84,84,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\atepc\training\atepc_trainer.py,99,99,torch.utils.data.TensorDataset,CUSTOM_SUPPORTED,"""torch.utils.data.TensorDataset"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.TensorDataset"" by x2mindspore."
pyabsa\core\atepc\training\atepc_trainer.py,104,104,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\tc\classic\__bert__\dataset_utils\data_utils_for_inferring.py,73,73,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\tc\classic\__bert__\dataset_utils\data_utils_for_training.py,163,163,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\tc\classic\__glove__\dataset_utils\data_utils_for_inferring.py,58,58,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\tc\classic\__glove__\dataset_utils\data_utils_for_training.py,151,151,torch.utils.data.Dataset,CUSTOM_SUPPORTED,"The corresponding api of ""torch.utils.data.Dataset"" is ""mindspore.dataset.GeneratorDataset"", has been adapted in x2mindspore."
pyabsa\core\tc\prediction\text_classifier.py,82,82,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\tc\prediction\text_classifier.py,85,85,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\tc\prediction\text_classifier.py,173,173,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\tc\prediction\text_classifier.py,186,186,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,46,46,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,77,77,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,101,101,torch.save,CUSTOM_SUPPORTED,"The corresponding api of ""torch.save"" is ""mindspore.save_checkpoint"", will be converted to ""x2ms_adapter.save"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,104,104,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,110,110,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,118,118,torch.utils.data.random_split,CUSTOM_SUPPORTED,"""torch.utils.data.random_split"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.random_split"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,125,125,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,127,127,torch.utils.data.DataLoader,CUSTOM_SUPPORTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, will be converted to adapted api ""x2ms_datasets.DataLoader"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,348,348,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,426,426,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\core\tc\training\classifier_trainer.py,427,427,torch.nn.CrossEntropyLoss,CUSTOM_SUPPORTED,"The corresponding api of ""torch.nn.CrossEntropyLoss"" is ""mindspore.nn.SoftmaxCrossEntropyWithLogits"", will be converted to ""loss_wrapper.CrossEntropyLoss"" by x2mindspore."
pyabsa\utils\file_utils.py,244,244,torch.save,CUSTOM_SUPPORTED,"The corresponding api of ""torch.save"" is ""mindspore.save_checkpoint"", will be converted to ""x2ms_adapter.save"" by x2mindspore."
pyabsa\utils\file_utils.py,256,256,torch.save,CUSTOM_SUPPORTED,"The corresponding api of ""torch.save"" is ""mindspore.save_checkpoint"", will be converted to ""x2ms_adapter.save"" by x2mindspore."
pyabsa\utils\file_utils.py,269,269,torch.save,CUSTOM_SUPPORTED,"The corresponding api of ""torch.save"" is ""mindspore.save_checkpoint"", will be converted to ""x2ms_adapter.save"" by x2mindspore."
pyabsa\utils\pyabsa_utils.py,113,113,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
pyabsa\utils\pyabsa_utils.py,115,115,torch.load,CUSTOM_SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
